//CodePointPropertyObject(UCD::property_t p, const UnicodeSet && nullSet, const UnicodeSet && mapsToSelf,
    //const std::unordered_map<UCD::codepoint_t, UCD::codepoint_t> && explicit_map)
    
    // To ask:
    // what are valid inputs for "getcodepointset"
    // how can i use this to map upper property to lower property, etc.
    // how can i use the unicode set iterator
    // how can i apply x lines of code over a streamset | the parabix way
    // property object for halfwidths? fullwidths?


    // my own dictionary:
    // UCD::PropertyObject * --> is a property object, see PropertyObjects.h
    // UCD::UnicodeSet --> is a set of unicode codepoints
    // UCD::PropertyObject*->GetCodepointSet(string) --> if empty string, gets the codepoint set of the objects property
    // UCD::property_t --> is the property
    // UCD::PropertyObject*->GetPropertyIntersection(UCD::PropertyObject*) --> finds the intersection set between two properties
    // UCD::UnicodeSet.at(int) --> gets the codepoint at index int

    
    // Get the property object for the lower object

    // UCD::get_SLC_PropertyObject()
    UCD::PropertyObject * lowerObject = UCD::get_LOWER_PropertyObject();
    // Get the
    UCD::UnicodeSet lSet = lowerObject->GetCodepointSet("");

    // 
    UCD::codepoint_t theCodePoint = 0x41;
    UCD::UnicodeSet equivalentCaselessCharacter = UCD::equivalentCodepoints(theCodePoint, UCD::EquivalenceOptions::Caseless);
    
    UCD::UnicodeSet lowerCaseCharacter = equivalentCaselessCharacter & lSet; // I tested by printing and this is indeed 0x61
    

    UCD::getPropertyFullName()
    //pb.createXor()

    //UCD::property_t upperProperty = upperObject->getPropertyCode();
    //UCD::UnicodeSet lInterUSet = lowerObject->GetCodepointSet(UCD::getPropertyEnumName(upperProperty));